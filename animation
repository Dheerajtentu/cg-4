#include <GL/glut.h>
#include <cmath>

// Global variables
float angle = 0.0f;       // Rotation angle in degrees
float speed = 2.0f;       // Speed of rotation per frame
int direction = 1;        // 1 = anti-clockwise, -1 = clockwise, 0 = stop

// Display callback: renders the square with current rotation
void display() {
    glClear(GL_COLOR_BUFFER_BIT);  // Clear the screen

    glLoadIdentity();  // Reset transformations

    // Apply rotation around the Z-axis (2D rotation)
    glRotatef(angle, 0.0f, 0.0f, 1.0f);

    // Draw a square centered at the origin
    glBegin(GL_QUADS);
        glVertex2f(-0.5f, -0.5f);
        glVertex2f( 0.5f, -0.5f);
        glVertex2f( 0.5f,  0.5f);
        glVertex2f(-0.5f,  0.5f);
    glEnd();

    glutSwapBuffers();  // Swap the back and front buffers
}

// Called when window is resized
void reshape(int width, int height) {
    glViewport(0, 0, width, height);  // Set the viewport to cover the new window

    glMatrixMode(GL_PROJECTION);     // Switch to projection matrix
    glLoadIdentity();                // Reset projection matrix
    glOrtho(-1.0, 1.0, -1.0, 1.0, -1.0, 1.0);  // Set 2D orthographic projection

    glMatrixMode(GL_MODELVIEW);      // Switch back to modelview
}

// Timer function to update the rotation angle
void update(int value) {
    angle += direction * speed;      // Change angle based on direction and speed

    // Keep angle within 0-360 degrees for consistency
    if (angle > 360.0f) angle -= 360.0f;
    if (angle < 0.0f) angle += 360.0f;

    glutPostRedisplay();            // Request redraw
    glutTimerFunc(16, update, 0);   // Call update again in ~16 ms (~60 FPS)
}

// Keyboard input handler
void handleKeypress(unsigned char key, int x, int y) {
    switch (key) {
        case 'a':  // Rotate anti-clockwise
            direction = 1;
            break;
        case 'd':  // Rotate clockwise
            direction = -1;
            break;
        case 's':  // Stop rotation
            direction = 0;
            break;
    }
}

// Main function
int main(int argc, char** argv) {
    glutInit(&argc, argv);                              // Initialize GLUT
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);        // Double buffering, RGB color
    glutInitWindowSize(500, 500);                       // Window size
    glutCreateWindow("Rotating Square");                // Create window

    glClearColor(0.0f, 0.0f, 0.0f, 1.0f);                // Black background

    // Register callback functions
    glutDisplayFunc(display);                           // Render function
    glutReshapeFunc(reshape);                           // Resize handler
    glutKeyboardFunc(handleKeypress);                   // Keyboard input
    glutTimerFunc(0, update, 0);                        // Start the animation loop

    glutMainLoop();                                     // Start the main loop
    return 0;
}
