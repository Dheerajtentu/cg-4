#include <GL/glut.h>
#include <cmath>

// Function to recursively draw a Bezier curve using subdivision
void drawBezier(
    float x1, float y1,   // First control point
    float x2, float y2,   // Second control point
    float x3, float y3,   // Third control point
    float x4, float y4,   // Fourth control point
    int depth             // Depth of recursion (curve smoothness)
) {
    // Base case: if depth is 0, draw a straight line from start to end
    if (depth == 0) {
        glBegin(GL_LINES);
            glVertex2f(x1, y1);
            glVertex2f(x4, y4);
        glEnd();
        return;
    }

    // Calculate midpoints between control points
    float x12 = (x1 + x2) / 2;
    float y12 = (y1 + y2) / 2;

    float x23 = (x2 + x3) / 2;
    float y23 = (y2 + y3) / 2;

    float x34 = (x3 + x4) / 2;
    float y34 = (y3 + y4) / 2;

    // Midpoints of midpoints
    float x123 = (x12 + x23) / 2;
    float y123 = (y12 + y23) / 2;

    float x234 = (x23 + x34) / 2;
    float y234 = (y23 + y34) / 2;

    // Final midpoint which lies on the curve
    float x1234 = (x123 + x234) / 2;
    float y1234 = (y123 + y234) / 2;

    // Recursively draw two halves of the curve
    drawBezier(x1, y1, x12, y12, x123, y123, x1234, y1234, depth - 1);
    drawBezier(x1234, y1234, x234, y234, x34, y34, x4, y4, depth - 1);
}

// Display function: called by GLUT to draw the window
void display() {
    glClear(GL_COLOR_BUFFER_BIT);      // Clear the screen
    glColor3f(1.0, 1.0, 1.0);          // Set drawing color to white

    // Call the Bezier function with 4 control points and depth 5
    drawBezier(100, 100, 150, 200, 350, 200, 400, 100, 5);

    glFlush();                         // Force execution of GL commands (used with single buffering)
}

// Main function
int main(int argc, char** argv) {
    glutInit(&argc, argv);                                  // Initialize GLUT
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);            // Use single buffer and RGB color mode
    glutInitWindowSize(500, 500);                           // Set window size
    glutCreateWindow("Bezier Fractal");                     // Create window with title

    glClearColor(0.0, 0.0, 0.0, 0.0);                        // Set black background
    glMatrixMode(GL_PROJECTION);                            // Set projection matrix
    glLoadIdentity();                                       // Reset projection
    gluOrtho2D(0, 500, 0, 500);                              // 2D orthographic projection

    glutDisplayFunc(display);                               // Set display callback
    glutMainLoop();                                         // Enter the event-processing loop
    return 0;
}
